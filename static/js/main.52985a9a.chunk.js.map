{"version":3,"sources":["components/cell/Cell.js","components/grid/Grid.js","assets/person-icon.svg","assets/home-icon.svg","components/cell/CellView.js","components/grid/GridView.js","assets/play-icon.svg","assets/grid-icon.svg","assets/replay-icon.svg","assets/shuffle-icon.svg","components/header/Header.js","pathfinding/util.js","pathfinding/astar.js","pathfinding/Queue.js","pathfinding/breadthFirstSearch.js","pathfinding/depthFirstSearch.js","pathfinding/dijkstra.js","views/App.js","serviceWorker.js","index.js"],"names":["Cell","row","col","type","visited","this","column","from","array","some","n","isAtPosition","findIndex","cell","newRow","newColumn","other","Grid","height","width","sideLength","numberRows","Math","floor","numberColumns","cells","thisRow","push","emptyCells","forEach","coords","filter","isEmpty","map","getCellCoordinate","concat","length","getAllEmptyCellCoordinates","random","newNumRows","newNumColumns","oldNumRows","getNumberRows","oldNumColumns","getNumberColumns","diffRows","diffColumns","newCells","slice","i","shift","pop","unshift","Array","fill","reposition","coord","setCellType","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","d","_ref3","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","CellView","cellType","className","data-row","data-column","onMouseDown","onMouseUp","onMouseOver","id","PureComponent","GridView","start","finish","gridComponents","rowIndex","colIndex","getType","onMouseDownCell","onMouseOverCell","gridRef","Component","enableBackground","Header","algorithmOptions","dropdownOptions","algorithm","Dropdown","Item","onClick","onSelectAlgorithm","name","DropdownButton","selectedAlgo","Button","findPath","OverlayTrigger","placement","overlay","Tooltip","reset","randomizeGrid","clearPath","defaultProps","getNeighbors","grid","node","maxRow","maxCol","neighbors","astarSearch","startCoord","finishCoord","clearAllVisited","open","closed","g","splice","indexInArray","astar","findLeastF","path","reverse","neighbor","cost","console","log","isInArray","neighborIndex","f","manhattanDistance","nodes","minNode","abs","Queue","items","element","breadthFirstSearch","bfs","queue","enqueue","front","dequeue","isVisited","depthFirstSearch","dfs","p","dijkstraSearch","prepareGrid","unvisited","distance","dijkstra","getNodeWithShortestPath","index","minIndex","Infinity","App","state","dragging","selectedAlgorithm","warning","React","createRef","clearWarning","bind","handleMouseDownOnCell","handleMouseOverCell","handleMouseUp","handleSelectAlgorithm","handleResize","randomizeStartAndFinish","resetGrid","algorithms","function","djikstra","window","addEventListener","setState","initializeNewGrid","removeEventListener","visitInterval","setInterval","visitNextCell","visit","forceUpdate","clearInterval","pathInterval","visitPathCell","prevState","newGrid","searchFunction","animateSearching","makeWall","current","clientHeight","clientWidth","resize","clearCellsByCoordinates","getRandomEmptyCellCoordinates","Modal","centered","backdrop","show","onHide","Body","variant","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.52985a9a.chunk.js","sourcesContent":["export default class Cell {\r\n  constructor(row, col, type=null, visited=false) {\r\n    this.row = row;\r\n    this.column = col;\r\n    this.from = null;\r\n    this.type = type;\r\n    this.visited = visited\r\n  }\r\n\r\n  isEmpty() {\r\n    return !this.type;\r\n  }\r\n\r\n  isInArray(array) {\r\n    return array.some(n => n.isAtPosition(this));\r\n  }\r\n\r\n  indexInArray(array) {\r\n    return array.findIndex(cell => (cell.isAtPosition(this)));\r\n  }\r\n\r\n  isVisited() {\r\n    return this.visited;\r\n  }\r\n\r\n  reposition(newRow, newColumn) {\r\n    this.row = newRow;\r\n    this.column = newColumn;\r\n  }\r\n\r\n  isAtPosition(other) {\r\n    if (!other) return false;\r\n    if (!(\"row\" in other) || !(\"column\" in other)) return false;\r\n    return this.row === other.row && this.column === other.column;\r\n  }\r\n\r\n  path() {\r\n    this.type = \"path\";\r\n  }\r\n\r\n  visit() {\r\n    this.type = \"visited\";\r\n  }\r\n\r\n}\r\n","// Class to contain the grid structure and logic\r\nimport Cell from \"../cell/Cell.js\";\r\n\r\nclass Grid {\r\n\r\n  constructor(height, width) {\r\n    this.sideLength = 24; // px\r\n\r\n    const numberRows = Math.floor(height/this.sideLength);\r\n    const numberColumns = Math.floor(width/this.sideLength);\r\n\r\n    this.cells = [];\r\n    for (var row=0; row<numberRows; row++) {\r\n      const thisRow = [];\r\n      for (var col=0; col<numberColumns; col++) {\r\n        thisRow.push(new Cell(row, col));\r\n      }\r\n      this.cells.push(thisRow);\r\n    }\r\n  }\r\n\r\n  getCellCoordinate(cell) {\r\n    return {row: cell.row, column: cell.column};\r\n    // for (var row=0; row<this.getNumberRows(); row++) {\r\n    //   for (var col=0; col<this.getNumberColumns(); col++) {\r\n    //     if (this.cells[row][col] === cell) {\r\n    //       return {row: row, column: col}\r\n    //     }\r\n    //   }\r\n    // }\r\n    // return null;\r\n  }\r\n\r\n  getAllEmptyCellCoordinates() {\r\n    // Get all empty cells on the grid. Returns an array of coordinate pairs.\r\n    var emptyCells = [];\r\n    this.cells.forEach(row => {\r\n      const cells = row.filter(cell => cell.isEmpty());\r\n      const coords = cells.map(cell => this.getCellCoordinate(cell));\r\n      emptyCells = emptyCells.concat(coords);\r\n    });\r\n\r\n    return emptyCells;\r\n  }\r\n\r\n  getNumberColumns() {\r\n    return this.cells[0]?.length;\r\n  }\r\n\r\n  getNumberRows() {\r\n    return this.cells.length;\r\n  }\r\n\r\n  getRandomEmptyCellCoordinates() {\r\n    const emptyCells = this.getAllEmptyCellCoordinates();\r\n    if (!emptyCells.length) return {};\r\n\r\n    const randomIndex = Math.floor(Math.random() * emptyCells.length);\r\n    return emptyCells[randomIndex];\r\n  }\r\n\r\n  makeWall(row, col) {\r\n    this.cells[row][col].type = \"wall\";\r\n  }\r\n\r\n  setCellType(row, col, type) {\r\n    this.cells[row][col].type = type;\r\n  }\r\n\r\n  resize(height, width) {\r\n    const newNumRows = Math.floor(height/this.sideLength);\r\n    const newNumColumns = Math.floor(width/this.sideLength);\r\n\r\n    const oldNumRows = this.getNumberRows();\r\n    const oldNumColumns = this.getNumberColumns();\r\n\r\n    const diffRows = newNumRows - oldNumRows;\r\n    const diffColumns = newNumColumns - oldNumColumns;\r\n\r\n    let newCells = this.cells.slice();\r\n\r\n    // When shrinking, the difference in threshold (-1) is lower (than 2),\r\n    // otherwise you get half of a row/col and overflow issues.\r\n\r\n    if (diffRows <= -1) {\r\n      // remove first and last rows from the old grid\r\n      for (var i=diffRows; i<0; i++) {\r\n        newCells.shift();\r\n        newCells.pop();\r\n      }\r\n    } else if (diffRows >= 2) {\r\n      // Add two new rows. Use old columns because we check for new columns next\r\n      for (var i = 0; i < diffRows; i+=2) {\r\n        newCells.unshift(new Array(oldNumColumns).fill(new Cell()));\r\n        newCells.push(new Array(oldNumColumns).fill(new Cell()));\r\n      }\r\n    }\r\n\r\n    if (diffColumns <= -1) {\r\n      // remove first and last column\r\n      for (var row = 0; row < newCells.length; row++) {\r\n        newCells[row].shift();\r\n        newCells[row].pop();\r\n      }\r\n    } else if (diffColumns >= 2) {\r\n      // Add two new columns to each row\r\n      for (var row = 0; row < newCells.length; row++) {\r\n        for (var col = 0; col < diffColumns; col+=2) {\r\n          newCells[row].unshift(new Cell());\r\n          newCells[row].push(new Cell());\r\n        }\r\n      }\r\n    }\r\n\r\n    for (var row = 0; row < newCells.length; row++) {\r\n      for (var col = 0; col < newCells[0].length; col++) {\r\n        newCells[row][col].reposition(row, col);\r\n      }\r\n    }\r\n\r\n    this.cells = newCells;\r\n  }\r\n\r\n  clearCellsByCoordinates(...coords) {\r\n    for (var coord of coords) {\r\n      this.setCellType(coord.row, coord.column, null);\r\n    }\r\n  }\r\n\r\n  clearAllVisited() {\r\n    for (var row=0; row<this.getNumberRows(); row++) {\r\n      for (var col=0; col<this.getNumberColumns(); col++) {\r\n        let cell = this.cells[row][col];\r\n        cell.from = null;\r\n        cell.visited = false;\r\n        if (cell.type === \"visited\") this.setCellType(row, col, null);\r\n        if (cell.type === \"path\") this.setCellType(row, col, null);\r\n      }\r\n    }\r\n  }\r\n\r\n  flatten() {\r\n    // Returns the 2D array as a 1D array.\r\n    return [].concat(...this.cells);\r\n  }\r\n\r\n}\r\n\r\nexport default Grid;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2c1.1 0 2 .9 2 2s-.9 2-2 2-2-.9-2-2 .9-2 2-2zm9 7h-6v13h-2v-6h-2v6H9V9H3V7h18v2z\"\n});\n\nvar SvgPersonIcon = function SvgPersonIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPersonIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/person-icon.7fff22c0.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.69l5 4.5V18h-2v-6H9v6H7v-7.81l5-4.5M12 3L2 12h3v8h6v-6h2v6h6v-8h3L12 3z\"\n});\n\nvar SvgHomeIcon = function SvgHomeIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgHomeIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/home-icon.81344860.svg\";\nexport { ForwardRef as ReactComponent };","import React, { PureComponent } from \"react\";\r\n\r\nimport {ReactComponent as StartIcon} from \"../../assets/person-icon.svg\";\r\nimport {ReactComponent as FinishIcon} from \"../../assets/home-icon.svg\";\r\n\r\nimport \"./Cell.css\";\r\n\r\nclass CellView extends PureComponent {\r\n  render() {\r\n\r\n    const cellType = this.props.type ? \" cell--\" + this.props.type : \"\";\r\n\r\n    return (\r\n      <div\r\n        className={\"cell\" + cellType}\r\n        data-row={this.props.row}\r\n        data-column={this.props.column}\r\n        onMouseDown={this.props.onMouseDown}\r\n        onMouseUp={this.props.onMouseUp}\r\n        onMouseOver={this.props.onMouseOver}\r\n        id={\"row\"+this.props.row+\"col\"+this.props.column}\r\n      >\r\n\r\n        {(this.props.type === \"start\") ? <StartIcon /> : null}\r\n        {(this.props.type === \"finish\") ? <FinishIcon /> : null}\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CellView;\r\n","import React, { Component } from \"react\";\r\nimport CellView from \"../cell/CellView.js\";\r\nimport \"./Grid.css\";\r\n\r\nclass GridView extends Component {\r\n\r\n  getType(cell) {\r\n    if (cell.isAtPosition(this.props.start)) return \"start\";\r\n    if (cell.isAtPosition(this.props.finish)) return \"finish\";\r\n    return cell.type; // returns \"wall\" for now\r\n  }\r\n\r\n  render() {\r\n\r\n    const gridComponents = this.props.cells.map((row, rowIndex) => {\r\n      const cells = row.map((cell, colIndex) => {\r\n        return (\r\n          <CellView\r\n            type={this.getType(cell)}\r\n            key={\"row\" + rowIndex + \"col\" + colIndex}\r\n            row={rowIndex}\r\n            column={colIndex}\r\n            onMouseDown={() => this.props.onMouseDownCell(rowIndex, colIndex)}\r\n            onMouseUp={this.props.onMouseUp}\r\n            onMouseOver={() => this.props.onMouseOverCell(rowIndex, colIndex)}\r\n          />\r\n        )});\r\n\r\n      return (\r\n        <div className=\"grid__row\" key={\"row\" + rowIndex}>\r\n          {cells}\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"grid\" ref={this.props.gridRef}>\r\n        {gridComponents}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GridView;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 8.64L15.27 12 10 15.36V8.64M8 5v14l11-7L8 5z\"\n});\n\nvar SvgPlayIcon = function SvgPlayIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPlayIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/play-icon.dfc68ecb.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20 2H4c-1.1 0-2 .9-2 2v16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zM8 20H4v-4h4v4zm0-6H4v-4h4v4zm0-6H4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4zm6 12h-4v-4h4v4zm0-6h-4v-4h4v4zm0-6h-4V4h4v4z\"\n});\n\nvar SvgGridIcon = function SvgGridIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgGridIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/grid-icon.0ee556c7.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}), /*#__PURE__*/React.createElement(\"rect\", {\n  fill: \"none\",\n  height: 24,\n  width: 24\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"g\", null), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12,5V1L7,6l5,5V7c3.31,0,6,2.69,6,6s-2.69,6-6,6s-6-2.69-6-6H4c0,4.42,3.58,8,8,8s8-3.58,8-8S16.42,5,12,5z\"\n}));\n\nvar SvgReplayIcon = function SvgReplayIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    enableBackground: \"new 0 0 24 24\",\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgReplayIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/replay-icon.1177dc70.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 0h24v24H0V0z\",\n  fill: \"none\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.59 9.17L5.41 4 4 5.41l5.17 5.17 1.42-1.41zM14.5 4l2.04 2.04L4 18.59 5.41 20 17.96 7.46 20 9.5V4h-5.5zm.33 9.41l-1.41 1.41 3.13 3.13L14.5 20H20v-5.5l-2.04 2.04-3.13-3.13z\"\n});\n\nvar SvgShuffleIcon = function SvgShuffleIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgShuffleIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/shuffle-icon.f07e2f3f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { PureComponent } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Tooltip from \"react-bootstrap/Tooltip\";\r\nimport \"./Header.css\";\r\n\r\nimport {ReactComponent as PlayIcon} from \"../../assets/play-icon.svg\";\r\nimport {ReactComponent as GridIcon} from \"../../assets/grid-icon.svg\";\r\nimport {ReactComponent as ReplayIcon} from \"../../assets/replay-icon.svg\";\r\nimport {ReactComponent as ShuffleIcon} from \"../../assets/shuffle-icon.svg\";\r\n\r\nclass Header extends PureComponent {\r\n\r\n  render() {\r\n    const algorithmOptions = Object.keys(this.props.dropdownOptions).map(key => {\r\n      const algorithm = this.props.dropdownOptions[key];\r\n      return (\r\n        <Dropdown.Item\r\n          key={key}\r\n          onClick={() => this.props.onSelectAlgorithm(key)}>\r\n          {algorithm.name}\r\n        </Dropdown.Item>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"header\">\r\n\r\n        <div className=\"header__logo\">\r\n          Pathfinding Visualizer\r\n        </div>\r\n\r\n        <div className=\"header__controls\">\r\n          <DropdownButton id=\"dropdown-basic-button\" title={this.props.selectedAlgo}>\r\n            {algorithmOptions}\r\n          </DropdownButton>\r\n          <Button onClick={this.props.findPath}><PlayIcon /></Button>\r\n\r\n          <OverlayTrigger\r\n            placement=\"bottom\"\r\n            overlay={\r\n              <Tooltip id=\"bottom\">\r\n                Reset Board\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <Button onClick={this.props.reset}><GridIcon /></Button>\r\n          </OverlayTrigger>\r\n\r\n          <OverlayTrigger\r\n            placement=\"bottom\"\r\n            overlay={\r\n              <Tooltip id=\"bottom\">\r\n                Randomize Start and Finish\r\n              </Tooltip>\r\n            }\r\n          >\r\n          <Button onClick={this.props.randomizeGrid}><ShuffleIcon /></Button>\r\n          </OverlayTrigger>\r\n\r\n          <OverlayTrigger\r\n            placement=\"bottom\"\r\n            overlay={\r\n              <Tooltip id=\"bottom\">\r\n                Clear Path\r\n              </Tooltip>\r\n            }\r\n          >\r\n          <Button onClick={this.props.clearPath}><ReplayIcon /></Button>\r\n          </OverlayTrigger>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nHeader.defaultProps = {\r\n  selectedAlgo: \"Algorithm\",\r\n}\r\n\r\nexport default Header;\r\n","// Generic functions to do with pathfinding\r\n\r\nexport const getNeighbors = function(grid, node) {\r\n  // returns all the neighbors of node in grid\r\n  // \"grid\" is a 2D array\r\n  // node is a dict {row: int, column: int, type: str}\r\n\r\n  const maxRow = grid.getNumberRows() - 1;\r\n  const maxCol = grid.getNumberColumns() - 1;\r\n\r\n  const row = node.row;\r\n  const col = node.column;\r\n\r\n  let neighbors = [];\r\n\r\n  if (col - 1 >= 0) { neighbors.push(grid.cells[row][col - 1]); }\r\n  if (col + 1 <= maxCol) { neighbors.push(grid.cells[row][col + 1]); }\r\n  if (row - 1 >= 0) { neighbors.push(grid.cells[row - 1][col]); }\r\n  if (row + 1 <= maxRow) { neighbors.push(grid.cells[row + 1][col]); }\r\n\r\n  return neighbors.filter(node => node.type !== \"wall\");\r\n}\r\n","import { getNeighbors } from \"./util.js\";\r\n\r\nexport const astarSearch = function(grid, startCoord, finishCoord) {\r\n  grid.clearAllVisited();\r\n\r\n  const start = grid.cells[startCoord.row][startCoord.column];\r\n  const finish = grid.cells[finishCoord.row][finishCoord.column];\r\n\r\n  let open = [start]; // candidates to visit\r\n  let closed = [];    // candidates that have been visited\r\n\r\n  let node = start;\r\n  node.g = 0;\r\n  let index = 0;\r\n  while (!node.isAtPosition(finish)) {\r\n    open.splice(node.indexInArray(open), 1);\r\n    closed.push(node);\r\n    astar(grid, node, open, closed, finish);\r\n    node = findLeastF(open);\r\n  }\r\n\r\n  // Backtrack from the finish node to get the path\r\n  let path = [];\r\n  node = finish;\r\n  while (node.from) {\r\n    node = node.from;\r\n    path.push(node)\r\n  }\r\n\r\n  return {path: path.reverse(), visited: closed};\r\n}\r\n\r\n\r\nconst astar = function(grid, node, open, closed, finish) {\r\n  // Examine neighbors\r\n  let neighbors = getNeighbors(grid, node);\r\n  const pathWeight = 1; // A grid has equal weights to all neighbors\r\n  for (var neighbor of neighbors) {\r\n    let cost = node.g + pathWeight;\r\n    console.log(cost);\r\n\r\n    if (neighbor.isInArray(open) && (cost < neighbor.g)) {\r\n      // remove neighbor from open because new path is better\r\n      let neighborIndex = open.findIndex(n => n.isAtPosition(neighbor));\r\n      open.splice(neighborIndex, 1);\r\n    }\r\n\r\n    if (!neighbor.isInArray(open) && !neighbor.isInArray(closed)) {\r\n      neighbor.g = cost;\r\n      neighbor.f = neighbor.g + manhattanDistance(neighbor, finish);\r\n      neighbor.from = node;\r\n      open.push(neighbor);\r\n    }\r\n  }\r\n}\r\n\r\nconst findLeastF = function(nodes) {\r\n  let minNode = nodes[0];\r\n  for (var node of nodes) {\r\n    if (node.f < minNode.f) {\r\n      minNode = node;\r\n    }\r\n  }\r\n  return minNode;\r\n}\r\n\r\nconst manhattanDistance = function(node, finish) {\r\n  // Used when only four directions are allowed\r\n  return Math.abs(node.row - finish.row) + Math.abs(node.column - finish.column);\r\n}\r\n\r\nconst euclideanDistance = function(node, finish) {\r\n  // Use when allowed to move in all 8 directions\r\n  return Math.sqrt((node.row - finish.row)^2 + (node.column - finish.column)^2);\r\n}\r\n","export default class Queue {\r\n  constructor() {\r\n    this.items = [];\r\n  }\r\n\r\n  enqueue(element) {\r\n    this.items.push(element);\r\n  }\r\n\r\n  dequeue() {\r\n    return this.items.shift();\r\n  }\r\n\r\n  front() {\r\n    if (this.isEmpty()) {\r\n      return null;\r\n    }\r\n    return this.items[0];\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.items.length === 0;\r\n  }\r\n}\r\n","import Queue from \"./Queue.js\";\r\nimport { getNeighbors } from \"./util.js\";\r\n\r\nexport const breadthFirstSearch = function(grid, startCoord, finishCoord) {\r\n\r\n  grid.clearAllVisited();\r\n\r\n  // Do the search and then backtrack to find the path.\r\n  let path = [];\r\n  const start = grid.cells[startCoord.row][startCoord.column];\r\n  const finish = grid.cells[finishCoord.row][finishCoord.column];\r\n  let { node, visited } = bfs(grid, start, finish);  // returns the final node\r\n\r\n  while (node && node.from) {\r\n    path.push(node);\r\n    node = node.from;\r\n  }\r\n\r\n  return { path: path.reverse(), visited: visited };\r\n}\r\n\r\n// This function is used for Dijkstra's algorithm in order\r\n// to find the all reachable nodes\r\nexport const bfs = function(grid, start, finish) {\r\n  // Do a breadth first search on the 2D array grid\r\n\r\n  let queue = new Queue();\r\n  let visited = [];\r\n  var node = start;\r\n\r\n  queue.enqueue(node);\r\n  node.visited = true;\r\n\r\n  while (!queue.isEmpty()) {\r\n    node = queue.front();\r\n    queue.dequeue(node);\r\n    let neighbors = getNeighbors(grid, node);\r\n    for (var neighbor of neighbors) {\r\n      if (!neighbor.isVisited()) {\r\n        neighbor.visited = true;\r\n        neighbor.from = node;\r\n        if (neighbor.isAtPosition(finish)) {\r\n          return { node: neighbor, visited: visited };\r\n        }\r\n        else {\r\n          visited.push(neighbor);\r\n          queue.enqueue(neighbor);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return { node: null, visited: visited };  // not found\r\n}\r\n","import { getNeighbors } from \"./util.js\";\r\n\r\nexport const depthFirstSearch = function(grid, startCoord, finishCoord) {\r\n\r\n  grid.clearAllVisited();\r\n\r\n  let path = [];\r\n  let visited = [];\r\n  const start = grid.cells[startCoord.row][startCoord.column];\r\n  const finish = grid.cells[finishCoord.row][finishCoord.column];\r\n  return {\r\n    path: dfs(grid, start, finish, path, visited),\r\n    visited: visited\r\n  };\r\n}\r\n\r\nconst dfs = function(grid, start, finish, path, visited) {\r\n\r\n  start.visited = true;\r\n  visited.push(start);\r\n  if (start.isAtPosition(finish)) return path;\r\n\r\n  let neighbors = getNeighbors(grid, start).filter(cell => !cell.isVisited());\r\n  for (var neighbor of neighbors) {\r\n    var p = dfs(grid, neighbor, finish, path.concat(start), visited);\r\n    if (p.length > 0) return p;\r\n  };\r\n  return [];\r\n}\r\n\r\n// TODO; something is happening with DFS when the path isv ery long\r\n","// Dijkstra's Algorithm\r\n// Finds the shortest path but has to visit all the nodes to do so\r\n\r\nimport { getNeighbors } from \"./util.js\";\r\nimport { bfs } from \"./breadthFirstSearch.js\";\r\n\r\nexport const dijkstraSearch = function(grid, startCoord, finishCoord) {\r\n  // All neighbors in grid are weighted to 1\r\n\r\n  grid.clearAllVisited();\r\n\r\n  let visited = [];\r\n  prepareGrid(grid);\r\n\r\n  const start = grid.cells[startCoord.row][startCoord.column];\r\n  const finish = grid.cells[finishCoord.row][finishCoord.column];\r\n\r\n  // Do a BFS to find all the reachable cells from the start. Use a null\r\n  // as the finish coordinate to ensure it searches all nodes.\r\n  let nullCoord = {row: null, column: null};\r\n  let unvisited = bfs(grid, start, nullCoord).visited;\r\n\r\n  start.distance = 0;\r\n  start.from = null;\r\n  while (unvisited.length > 0) {\r\n    dijkstra(grid, visited, unvisited);\r\n  }\r\n\r\n  // Backtrack from the finish node to get the path\r\n  let path = [];\r\n  let node = finish;\r\n  while (node.from) {\r\n    node = node.from;\r\n    path.push(node)\r\n  }\r\n\r\n  return {path: path.reverse(), visited: visited};\r\n}\r\n\r\nconst dijkstra = function(grid, visited, unvisited) {\r\n  // Recursive function to perform the Dijkstra algorithm at each step\r\n  let {node, index} = getNodeWithShortestPath(unvisited);\r\n\r\n  const pathWeight = 1; // A grid has equal weights to all neighbors\r\n  let neighbors = getNeighbors(grid, node);\r\n  neighbors.forEach(neighbor => {\r\n    if (node.distance + pathWeight < neighbor.distance) {\r\n      neighbor.from = node;\r\n      neighbor.distance = node.distance + pathWeight\r\n    }\r\n  });\r\n  visited.push(node);\r\n  unvisited.splice(index, 1);\r\n}\r\n\r\nconst getNodeWithShortestPath = function(unvisited) {\r\n  // Return the node with the shortest distance (from the start)\r\n  let minIndex = 0;\r\n  let minNode = unvisited[minIndex];\r\n  for (var i = 0; i < unvisited.length; i++) {\r\n    const node = unvisited[i];\r\n    if (node.distance < minNode.distance) {\r\n      minNode = node;\r\n      minIndex = i;\r\n    }\r\n  }\r\n  return {node: minNode, index: minIndex};\r\n}\r\n\r\nconst prepareGrid = function(grid) {\r\n  // Initialize grid for Dijkstra's algorithm by setting all distances to\r\n  // infinity and setting a previousVertex attribute to null\r\n  for (var row = 0; row < grid.getNumberRows(); row++) {\r\n    for (var col = 0; col < grid.getNumberColumns(); col++) {\r\n      let cell = grid.cells[row][col];\r\n      cell.from = null;\r\n      cell.distance = Infinity;\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"../components/grid/Grid.js\";\r\nimport GridView from \"../components/grid/GridView.js\";\r\nimport Header from \"../components/header/Header.js\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { astarSearch } from \"../pathfinding/astar.js\";\r\nimport { breadthFirstSearch } from \"../pathfinding/breadthFirstSearch.js\";\r\nimport { depthFirstSearch } from \"../pathfinding/depthFirstSearch.js\";\r\nimport { dijkstraSearch } from \"../pathfinding/dijkstra.js\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dragging: false,\r\n      grid: new Grid(),\r\n      start: null,\r\n      finish: null,\r\n      selectedAlgorithm: {},\r\n      warning: \"\"\r\n    }\r\n\r\n    this.gridRef = React.createRef();\r\n\r\n    this.clearWarning = this.clearWarning.bind(this);\r\n\r\n    this.clearPath = this.clearPath.bind(this);\r\n    this.findPath = this.findPath.bind(this);\r\n\r\n    this.handleMouseDownOnCell = this.handleMouseDownOnCell.bind(this);\r\n    this.handleMouseOverCell = this.handleMouseOverCell.bind(this);\r\n    this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    this.handleSelectAlgorithm = this.handleSelectAlgorithm.bind(this);\r\n    this.handleResize = this.handleResize.bind(this);\r\n\r\n    this.randomizeStartAndFinish = this.randomizeStartAndFinish.bind(this);\r\n    this.resetGrid = this.resetGrid.bind(this);\r\n\r\n    this.algorithms = {\r\n      astar: {name: \"A*\", function: astarSearch},\r\n      bfs: {name: \"Breadth-First Search\", function: breadthFirstSearch},\r\n      dfs: {name: \"Depth-First Search\", function: depthFirstSearch},\r\n      djikstra: {name: \"Djikstra's Algorithm\", function: dijkstraSearch}\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    this.setState({ grid: this.initializeNewGrid() });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleResize);\r\n  }\r\n\r\n  clearWarning() {\r\n    this.setState({ warning: null });\r\n  }\r\n\r\n  animateSearching(visited, path) {\r\n\r\n    if (visited) {\r\n      this.visitInterval = setInterval(\r\n        () => this.visitNextCell(visited, path),\r\n        50\r\n      );\r\n    }\r\n  }\r\n\r\n  visitNextCell(visited, path) {\r\n    const cell = visited.shift();\r\n    cell.visit();\r\n    this.forceUpdate();\r\n\r\n    if (visited.length === 0) {\r\n      clearInterval(this.visitInterval);\r\n\r\n      if (visited) {\r\n        this.pathInterval = setInterval(\r\n          () => this.visitPathCell(path),\r\n          50\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  visitPathCell(path) {\r\n    const cell = path.shift();\r\n    cell.path();\r\n    this.forceUpdate();\r\n\r\n    if (path.length === 0) {\r\n      clearInterval(this.pathInterval);\r\n    }\r\n  }\r\n\r\n  clearPath() {\r\n    this.setState(prevState => {\r\n      let newGrid = prevState.grid;\r\n      newGrid.clearAllVisited();\r\n      return {grid: newGrid}\r\n    })\r\n  }\r\n\r\n  findPath() {\r\n    const { grid, start, finish } = this.state;\r\n\r\n    if (!start || !finish) {\r\n      this.setState({ warning: \"Please select a start or finish.\"})\r\n      return;\r\n    }\r\n\r\n    const searchFunction = this.state.selectedAlgorithm.function;\r\n    if (!searchFunction) {\r\n      this.setState({ warning: \"Please select an algorithm.\"})\r\n      return;\r\n    }\r\n\r\n    const { path, visited } = searchFunction(grid, start, finish);\r\n    this.animateSearching(visited, path);\r\n  }\r\n\r\n  handleMouseDownOnCell(row, col) {\r\n\r\n    // Set this cell as a wall\r\n    this.setState(prevState => {\r\n      prevState.grid.makeWall(row, col);\r\n      return {dragging: true }\r\n    });\r\n  }\r\n\r\n  handleMouseOverCell(row, col) {\r\n    if (this.state.dragging) {\r\n      this.handleMouseDownOnCell(row, col);\r\n    }\r\n  }\r\n\r\n  handleMouseUp() {\r\n    this.setState({ dragging: false });\r\n  }\r\n\r\n  handleSelectAlgorithm(key) {\r\n    this.setState({\r\n      selectedAlgorithm: this.algorithms[key]\r\n    });\r\n  }\r\n\r\n  handleResize() {\r\n    // Redraw the grid, but keep the other cells the same.\r\n    const height = this.gridRef.current.clientHeight;\r\n    const width = this.gridRef.current.clientWidth;\r\n    this.setState(prevState => {\r\n      prevState.grid.resize(height, width)\r\n      return { grid: prevState.grid }\r\n    });\r\n  }\r\n\r\n  initializeNewGrid() {\r\n    const height = this.gridRef.current.clientHeight;\r\n    const width = this.gridRef.current.clientWidth;\r\n    return new Grid(height, width);\r\n  }\r\n\r\n  randomizeStartAndFinish() {\r\n    let grid = this.state.grid;\r\n\r\n    // Clear old start and finish if they exist\r\n    if (this.state.start) grid.clearCellsByCoordinates(this.state.start);\r\n    if (this.state.finish) grid.clearCellsByCoordinates(this.state.finish);\r\n\r\n    // Find new start and finish\r\n    const start = grid.getRandomEmptyCellCoordinates();\r\n    grid.setCellType(start.row, start.column, \"start\");\r\n    const finish = grid.getRandomEmptyCellCoordinates();\r\n    grid.setCellType(finish.row, finish.column, \"finish\");\r\n\r\n    this.setState({ start: start, finish: finish });\r\n  }\r\n\r\n  resetGrid() {\r\n    this.setState({\r\n      grid: this.initializeNewGrid(),\r\n      start: null,\r\n      finish: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Header\r\n          clearPath={this.clearPath}\r\n          findPath={this.findPath}\r\n          dropdownOptions={this.algorithms}\r\n          onSelectAlgorithm={this.handleSelectAlgorithm}\r\n          selectedAlgo={this.state.selectedAlgorithm.name}\r\n          randomizeGrid={this.randomizeStartAndFinish}\r\n          reset={this.resetGrid}\r\n        />\r\n\r\n        <GridView\r\n          {...this.state.grid}\r\n          gridRef={this.gridRef}\r\n          start={this.state.start}\r\n          finish={this.state.finish}\r\n          onMouseDownCell={this.handleMouseDownOnCell}\r\n          onMouseOverCell={this.handleMouseOverCell}\r\n          onMouseUp={this.handleMouseUp}\r\n        />\r\n\r\n        <Modal\r\n          centered\r\n          backdrop\r\n          show={this.state.warning}\r\n          onHide={this.clearWarning}>\r\n          <Modal.Body className=\"modal__body\">\r\n            {this.state.warning}\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={this.clearWarning}>\r\n              OK\r\n            </Button>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './views/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}